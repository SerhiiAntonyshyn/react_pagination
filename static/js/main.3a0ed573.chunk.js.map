{"version":3,"sources":["components/Pagination/Pagination.js","App.js","index.js"],"names":["Pagination","total","perPage","page","previousPage","onPageChange","nextPage","lastPage","Math","ceil","precurrent","postcurrent","startNumberInPerPage","finalNumberInPerPage","arrayOfPagination","i","push","firstPage","filter","numberOfPage","splice","getPaginationControls","className","type","disabled","onClick","map","key","classNames","active","name","value","App","state","arrayOfSelection","setState","prevState","onPerPageChange","event","target","this","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2QAKaA,EAAa,SAAC,GAOpB,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,SAGMC,EAAWC,KAAKC,KAAKR,EAAQC,GAC7BQ,EAAaP,EAAO,EACpBQ,EAAcR,EAAO,EAErBS,EAAuBT,EAAOD,EAAUA,EAAU,EAClDW,EAAuBV,EAAOD,EAAUD,EAAQA,EAAQE,EAAOD,EACjEY,EAAoB,GA0CxB,OAZ8B,WAC5B,GAAIP,EAAW,EACb,IAAK,IAAIQ,EAvCK,EAuCUA,GAAKR,EAAUQ,GAAK,EAC1CD,EAAkBE,KAAKD,QA9BvBZ,EAAOc,IACTH,EAAoB,CAXN,EAWkBG,EAC9BA,EARY,MAQcV,IAG1BJ,EAAOI,EAAW,IACpBO,EAAoB,CAhBN,EAIA,MAaZP,EAAW,EAAGA,EAAW,EAAGA,IAG5BJ,EAAOc,GAAiBd,EAAOI,EAAW,IAC5CO,EAAoB,CArBN,EAIA,MAiB6BJ,EACzCP,EAAMQ,EAlBM,MAkBkBJ,GAE5BA,EAAW,IAAMU,EACnBH,EAAoBA,EACjBI,QAAO,SAAAC,GAAY,MAAqB,QAAjBA,KACRF,IAATd,EACTW,EAAkBM,OAAO,EAAG,GACnBjB,IAASI,EAAW,GAC7BO,EAAkBM,OAAO,EAAG,IAiBlCC,GAGE,oCACE,qCAAOT,EAAP,YAA+BC,EAA/B,eAA0DZ,IAC1D,yBAAKqB,UAAU,cACb,4BACEC,KAAK,SACLD,UAAU,iBACVE,SAxDU,IAwDArB,EACVsB,QAASrB,GAJX,YAQCU,EAAkBY,KAAI,SAAAP,GAAY,OACjC,4BACEQ,IAAKR,EACLI,KAAK,SACLD,UAAWM,IACT,OACA,CAAEC,OAAQ1B,IAASgB,IAErBK,SAjEQ,QAiEgBL,EACxBW,KAAMX,EACNY,MAAOZ,EACPM,QAAS,kBAAMpB,EAAac,KAE3BA,MAGL,4BACEI,KAAK,SACLD,UAAU,aACVE,SAAUrB,IAASI,EACnBkB,QAASnB,GAJX,WClBO0B,E,4MAnEbC,MAAQ,CACNhC,MAAO,GACPC,QAAS,EACTC,KAAM,EACN+B,iBAAkB,CAAC,EAAG,EAAG,GAAI,K,EAG/B7B,aAAe,SAACc,GACd,EAAKgB,SAAS,CAAEhC,KAAMgB,K,EAGxBf,aAAe,WACb,EAAK+B,UAAS,SAAAC,GAAS,MAAK,CAC1BjC,KAAMiC,EAAUjC,KAAO,O,EAI3BG,SAAW,WACT,EAAK6B,UAAS,SAAAC,GAAS,MAAK,CAC1BjC,KAAMiC,EAAUjC,KAAO,O,EAI3BkC,gBAAkB,SAACC,GAAW,IAAD,IACHA,EAAMC,OAAtBT,EADmB,EACnBA,KAAMC,EADa,EACbA,MAEd,EAAKI,UAAL,mBACGL,EAAOC,GADV,qBAEQ,GAFR,K,uDAMQ,IAAD,EAC4CS,KAAKP,MAAhDhC,EADD,EACCA,MAAOC,EADR,EACQA,QAASC,EADjB,EACiBA,KAAM+B,EADvB,EACuBA,iBAE9B,OACE,oCACE,0CACA,8BACE,4BACEJ,KAAK,UACLC,MAAO7B,EACPuC,SAAUD,KAAKH,iBAEdH,EAAiBR,KAAI,SAAAK,GAAK,OACzB,4BACEJ,IAAKI,EACLA,MAAOA,GAENA,QAKT,kBAAC,EAAD,CACE9B,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,aAAcoC,KAAKpC,aACnBC,aAAcmC,KAAKnC,aACnBC,SAAUkC,KAAKlC,gB,GA7DPoC,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3a0ed573.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\nimport classNames from 'classnames';\n\nexport const Pagination = ({\n  total,\n  perPage,\n  page,\n  previousPage,\n  onPageChange,\n  nextPage,\n}) => {\n  const firstPage = 1;\n  const lastPage = Math.ceil(total / perPage);\n  const precurrent = page - 1;\n  const postcurrent = page + 1;\n  const skipPages = '...';\n  const startNumberInPerPage = page * perPage - perPage + 1;\n  const finalNumberInPerPage = page * perPage > total ? total : page * perPage;\n  let arrayOfPagination = [];\n\n  const getPaginationControlsInMoreThan5Pages = () => {\n    if (page < firstPage + 2) {\n      arrayOfPagination = [firstPage, firstPage + 1,\n        firstPage + 2, skipPages, lastPage];\n    }\n\n    if (page > lastPage - 2) {\n      arrayOfPagination = [firstPage, skipPages,\n        lastPage - 2, lastPage - 1, lastPage];\n    }\n\n    if (page > firstPage + 1 && page < lastPage - 1) {\n      arrayOfPagination = [firstPage, skipPages, precurrent,\n        page, postcurrent, skipPages, lastPage];\n\n      if (lastPage - 2 === firstPage + 2) {\n        arrayOfPagination = arrayOfPagination\n          .filter(numberOfPage => numberOfPage !== '...');\n      } else if (page === firstPage + 2) {\n        arrayOfPagination.splice(1, 1);\n      } else if (page === lastPage - 2) {\n        arrayOfPagination.splice(5, 1);\n      }\n    }\n\n    return arrayOfPagination;\n  };\n\n  const getPaginationControls = () => {\n    if (lastPage < 5) {\n      for (let i = firstPage; i <= lastPage; i += 1) {\n        arrayOfPagination.push(i);\n      }\n    } else {\n      getPaginationControlsInMoreThan5Pages();\n    }\n  };\n\n  getPaginationControls();\n\n  return (\n    <>\n      <p>{`${startNumberInPerPage}-${finalNumberInPerPage} of ${total}`}</p>\n      <div className=\"pagination\">\n        <button\n          type=\"button\"\n          className=\"previousButton\"\n          disabled={page === firstPage}\n          onClick={previousPage}\n        >\n          Previous\n        </button>\n        {arrayOfPagination.map(numberOfPage => (\n          <button\n            key={numberOfPage}\n            type=\"button\"\n            className={classNames(\n              'page',\n              { active: page === numberOfPage },\n            )}\n            disabled={skipPages === numberOfPage}\n            name={numberOfPage}\n            value={numberOfPage}\n            onClick={() => onPageChange(numberOfPage)}\n          >\n            {numberOfPage}\n          </button>\n        ))}\n        <button\n          type=\"button\"\n          className=\"nextButton\"\n          disabled={page === lastPage}\n          onClick={nextPage}\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n    arrayOfSelection: [3, 5, 10, 20],\n  };\n\n  onPageChange = (numberOfPage) => {\n    this.setState({ page: numberOfPage });\n  };\n\n  previousPage = () => {\n    this.setState(prevState => ({\n      page: prevState.page - 1,\n    }));\n  };\n\n  nextPage = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  onPerPageChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      page: 1,\n    });\n  };\n\n  render() {\n    const { total, perPage, page, arrayOfSelection } = this.state;\n\n    return (\n      <>\n        <h1>Pagination</h1>\n        <form>\n          <select\n            name=\"perPage\"\n            value={perPage}\n            onChange={this.onPerPageChange}\n          >\n            {arrayOfSelection.map(value => (\n              <option\n                key={value}\n                value={value}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n        </form>\n        <Pagination\n          total={total}\n          perPage={perPage}\n          page={page}\n          previousPage={this.previousPage}\n          onPageChange={this.onPageChange}\n          nextPage={this.nextPage}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}